<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Galactic Command Hub</title>
    <link href="https://fonts.googleapis.com/css2?family=Rajdhani:wght@300;400;500;600;700&family=Audiowide&family=Electrolize:wght@400&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Rajdhani', sans-serif;
            background: radial-gradient(ellipse at center, #1a0033 0%, #000011 50%, #000000 100%);
            color: #00d4ff;
            min-height: 100vh;
            overflow-x: hidden;
            position: relative;
        }
        
        .space-field {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 1;
        }
        
        .star-field {
            position: absolute;
            width: 3px;
            height: 3px;
            background: linear-gradient(45deg, #00d4ff, #ff00ff);
            border-radius: 50%;
            animation: neonTwinkle 3s infinite;
            box-shadow: 0 0 10px currentColor;
        }
        
        @keyframes neonTwinkle {
            0%, 100% { opacity: 0.4; transform: scale(0.8); }
            50% { opacity: 1; transform: scale(1.3); }
        }
        
        .satellite {
            position: absolute;
            width: 40px;
            height: 40px;
            background: linear-gradient(45deg, #ff00ff, #00d4ff);
            clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%);
            animation: hologramFloat 15s linear infinite;
            filter: drop-shadow(0 0 15px #ff00ff);
        }
        
        @keyframes hologramFloat {
            0% { transform: translateX(-50px) translateY(0px) rotate(0deg); }
            25% { transform: translateX(100vw) translateY(-80px) rotate(90deg); }
            50% { transform: translateX(calc(100vw + 50px)) translateY(100vh) rotate(180deg); }
            75% { transform: translateX(-50px) translateY(calc(100vh + 80px)) rotate(270deg); }
            100% { transform: translateX(-50px) translateY(0px) rotate(360deg); }
        }
        
        .radar-sweep {
            position: absolute;
            width: 300px;
            height: 300px;
            border: 3px solid #00d4ff;
            border-radius: 50%;
            opacity: 0.2;
            animation: quantumScan 6s linear infinite;
            box-shadow: 0 0 30px #00d4ff;
        }
        
        @keyframes quantumScan {
            0% { transform: scale(0.3) rotate(0deg); opacity: 0.6; }
            100% { transform: scale(2.5) rotate(360deg); opacity: 0; }
        }
        
        .container {
            position: relative;
            z-index: 2;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }
        
        .mission-control {
            background: linear-gradient(145deg, rgba(0, 0, 17, 0.9), rgba(26, 0, 51, 0.9));
            border: 3px solid #00d4ff;
            border-radius: 25px;
            box-shadow: 
                0 0 80px rgba(0, 212, 255, 0.3),
                inset 0 0 80px rgba(255, 0, 255, 0.1);
            max-width: 1400px;
            width: 100%;
            overflow: hidden;
            position: relative;
            backdrop-filter: blur(15px);
        }
        
        .mission-control::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 8px;
            background: linear-gradient(90deg, #ff00ff, #00d4ff, #ff00ff, #00d4ff);
            background-size: 200% 100%;
            animation: hologramLights 2s linear infinite;
        }
        
        @keyframes hologramLights {
            0% { background-position: 0% 50%; }
            100% { background-position: 200% 50%; }
        }
        
        .control-header {
            background: linear-gradient(135deg, rgba(0, 212, 255, 0.15), rgba(255, 0, 255, 0.15));
            padding: 50px;
            text-align: center;
            position: relative;
            border-bottom: 4px solid #00d4ff;
        }
        
        .control-header::before {
            content: '◆ GALACTIC COMMAND ONLINE ◆';
            position: absolute;
            top: 15px;
            left: 50%;
            transform: translateX(-50%);
            font-family: 'Electrolize', monospace;
            font-size: 0.9rem;
            color: #ff00ff;
            animation: hologramBlink 1.5s infinite;
        }
        
        @keyframes hologramBlink {
            0%, 60% { opacity: 1; }
            61%, 100% { opacity: 0.4; }
        }
        
        .mission-title {
            font-family: 'Audiowide', monospace;
            font-size: 4rem;
            font-weight: 400;
            color: #00d4ff;
            text-shadow: 0 0 40px rgba(0, 212, 255, 0.8);
            margin-bottom: 20px;
            position: relative;
        }
        
        .mission-subtitle {
            font-family: 'Electrolize', monospace;
            font-size: 1.3rem;
            color: #ff00ff;
            font-weight: 400;
            text-shadow: 0 0 20px rgba(255, 0, 255, 0.6);
            text-transform: uppercase;
            letter-spacing: 4px;
        }
        
        .command-center {
            padding: 50px;
        }
        
        .mission-briefing {
            background: linear-gradient(145deg, rgba(0, 212, 255, 0.08), rgba(255, 0, 255, 0.08));
            border: 3px solid #00d4ff;
            border-radius: 20px;
            padding: 35px;
            margin-bottom: 45px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }
        
        .mission-briefing::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(0, 212, 255, 0.3), transparent);
            animation: hologramScan 4s infinite;
        }
        
        @keyframes hologramScan {
            0% { left: -100%; }
            100% { left: 100%; }
        }
        
        .briefing-text {
            font-family: 'Electrolize', monospace;
            font-size: 1.2rem;
            color: #00d4ff;
            margin-bottom: 25px;
            position: relative;
            z-index: 1;
            text-transform: uppercase;
            letter-spacing: 2px;
        }
        
        .launch-status {
            font-size: 1rem;
            color: #ff00ff;
            animation: quantumPulse 1.8s infinite;
            position: relative;
            z-index: 1;
        }
        
        @keyframes quantumPulse {
            0%, 100% { opacity: 0.6; }
            50% { opacity: 1; }
        }
        
        .mission-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(380px, 1fr));
            gap: 30px;
            margin-bottom: 40px;
        }
        
        .mission-module {
            background: linear-gradient(145deg, rgba(0, 0, 17, 0.8), rgba(26, 0, 51, 0.8));
            border: 2px solid #ff00ff;
            border-radius: 25px;
            padding: 40px 30px;
            cursor: pointer;
            transition: all 0.5s ease;
            position: relative;
            overflow: hidden;
            text-align: center;
        }
        
        .mission-module::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: 
                radial-gradient(circle at 25% 25%, rgba(0, 212, 255, 0.15) 3px, transparent 3px),
                radial-gradient(circle at 75% 75%, rgba(255, 0, 255, 0.15) 3px, transparent 3px);
            background-size: 40px 40px;
            animation: hologramGrid 12s linear infinite;
            pointer-events: none;
        }
        
        @keyframes hologramGrid {
            0% { transform: translate(0, 0); }
            100% { transform: translate(40px, 40px); }
        }
        
        .mission-module:hover {
            transform: translateY(-10px) scale(1.03);
            border-color: #00d4ff;
            box-shadow: 0 20px 50px rgba(0, 212, 255, 0.4);
        }
        
        .module-indicator {
            position: absolute;
            top: 20px;
            right: 20px;
            width: 55px;
            height: 55px;
            background: radial-gradient(circle at 30% 30%, #00d4ff, #ff00ff);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.3rem;
            animation: hologramPulse 2.5s ease-in-out infinite;
            box-shadow: 0 0 25px rgba(0, 212, 255, 0.6);
        }
        
        @keyframes hologramPulse {
            0%, 100% { transform: scale(1); opacity: 0.7; }
            50% { transform: scale(1.15); opacity: 1; }
        }
        
        .module-icon {
            font-size: 4rem;
            margin-bottom: 25px;
            filter: drop-shadow(0 0 20px currentColor);
            animation: quantumFloat 4s ease-in-out infinite;
            position: relative;
            z-index: 1;
        }
        
        @keyframes quantumFloat {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-12px) rotate(8deg); }
        }
        
        .module-name {
            font-family: 'Rajdhani', sans-serif;
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 18px;
            color: #00d4ff;
            position: relative;
            z-index: 1;
            text-transform: uppercase;
        }
        
        .module-description {
            font-size: 1rem;
            line-height: 1.6;
            color: #ff00ff;
            opacity: 0.85;
            position: relative;
            z-index: 1;
        }
        
        .difficulty-matrix {
            display: flex;
            justify-content: center;
            gap: 8px;
            margin-top: 25px;
        }
        
        .matrix-cell {
            width: 18px;
            height: 18px;
            background: rgba(0, 0, 17, 0.8);
            border: 2px solid #444;
            border-radius: 3px;
            transition: all 0.4s ease;
        }
        
        .matrix-cell.active {
            background: linear-gradient(45deg, #ff00ff, #00d4ff);
            box-shadow: 0 0 15px #ff00ff;
            animation: quantumGlow 2.2s ease-in-out infinite;
            border-color: #00d4ff;
        }
        
        @keyframes quantumGlow {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }
        
        .mission-session {
            display: none;
        }
        
        .mission-session.active {
            display: block;
        }
        
        .session-hud {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            flex-wrap: wrap;
            gap: 20px;
        }
        
        .abort-mission {
            background: linear-gradient(45deg, #ff0000, #cc0000);
            color: #ffffff;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            cursor: pointer;
            font-family: 'Orbitron', monospace;
            font-size: 0.9rem;
            font-weight: 700;
            transition: all 0.3s ease;
            text-transform: uppercase;
            box-shadow: 0 0 20px rgba(255, 0, 0, 0.4);
            animation: emergencyBlink 3s infinite;
        }
        
        @keyframes emergencyBlink {
            0%, 90% { opacity: 1; }
            95% { opacity: 0.5; }
        }
        
        .abort-mission:hover {
            transform: translateY(-3px);
            box-shadow: 0 0 30px rgba(255, 0, 0, 0.6);
        }
        
        .hud-displays {
            display: flex;
            gap: 25px;
            align-items: center;
        }
        
        .hud-screen {
            background: linear-gradient(45deg, rgba(0, 255, 65, 0.2), rgba(0, 153, 255, 0.2));
            border: 2px solid #00ff41;
            color: #00ff41;
            padding: 12px 25px;
            border-radius: 20px;
            font-family: 'Share Tech Mono', monospace;
            font-size: 0.9rem;
            font-weight: 600;
            box-shadow: 0 0 15px rgba(0, 255, 65, 0.3);
            text-shadow: 0 0 8px rgba(0, 255, 65, 0.8);
            text-transform: uppercase;
        }
        
        .mission-progress {
            background: rgba(0, 0, 0, 0.8);
            height: 30px;
            border-radius: 15px;
            overflow: hidden;
            border: 3px solid #00ff41;
            margin-bottom: 40px;
            box-shadow: inset 0 0 15px rgba(0, 255, 65, 0.3);
        }
        
        .progress-beam {
            background: linear-gradient(90deg, #ff6b35, #ffff00, #00ff41, #0099ff);
            background-size: 400% 100%;
            height: 100%;
            transition: width 1s ease;
            border-radius: 12px;
            animation: energyFlow 3s infinite;
            box-shadow: 0 0 20px rgba(0, 255, 65, 0.6);
        }
        
        @keyframes energyFlow {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }
        
        .command-display {
            background: linear-gradient(145deg, rgba(0, 255, 65, 0.1), rgba(0, 153, 255, 0.1));
            border: 3px solid #00ff41;
            border-radius: 20px;
            padding: 40px;
            margin-bottom: 25px;
            box-shadow: 0 0 30px rgba(0, 255, 65, 0.2);
            position: relative;
            backdrop-filter: blur(5px);
        }
        
        .command-display::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: 
                linear-gradient(45deg, transparent 49%, rgba(0, 255, 65, 0.05) 50%, transparent 51%);
            background-size: 20px 20px;
            animation: commandPattern 12s linear infinite;
            pointer-events: none;
        }
        
        @keyframes commandPattern {
            0% { transform: translate(0, 0) rotate(0deg); }
            100% { transform: translate(20px, 20px) rotate(360deg); }
        }
        
        .command-text {
            font-family: 'Orbitron', monospace;
            font-size: 1.6rem;
            font-weight: 600;
            margin-bottom: 35px;
            text-align: center;
            color: #00ff41;
            text-shadow: 0 0 15px rgba(0, 255, 65, 0.8);
            position: relative;
            z-index: 1;
            line-height: 1.4;
        }
        
        .response-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
        }
        
        .response-panel {
            background: linear-gradient(145deg, rgba(12, 12, 12, 0.95), rgba(26, 26, 46, 0.95));
            color: #ffffff;
            border: 2px solid #0099ff;
            padding: 30px 20px;
            border-radius: 15px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            text-align: center;
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
            backdrop-filter: blur(8px);
        }
        
        .response-panel::before {
            content: '●';
            position: absolute;
            top: 15px;
            left: 20px;
            font-size: 1.2rem;
            color: #0099ff;
            animation: statusDot 2s ease-in-out infinite;
        }
        
        @keyframes statusDot {
            0%, 100% { opacity: 0.5; }
            50% { opacity: 1; }
        }
        
        .response-panel:hover {
            transform: translateY(-8px) scale(1.02);
            border-color: #00ff41;
            box-shadow: 0 15px 40px rgba(0, 255, 65, 0.3);
        }
        
        .response-panel.correct {
            background: linear-gradient(145deg, rgba(0, 150, 0, 0.8), rgba(0, 100, 0, 0.8));
            border-color: #00ff41;
            animation: correctSignal 1s ease;
        }
        
        .response-panel.incorrect {
            background: linear-gradient(145deg, rgba(150, 0, 0, 0.8), rgba(100, 0, 0, 0.8));
            border-color: #ff0000;
            animation: errorGlitch 0.8s ease;
        }
        
        @keyframes correctSignal {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }
        
        @keyframes errorGlitch {
            0%, 100% { transform: translateX(0) skew(0deg); }
            20% { transform: translateX(-10px) skew(-2deg); }
            40% { transform: translateX(10px) skew(2deg); }
            60% { transform: translateX(-5px) skew(-1deg); }
            80% { transform: translateX(5px) skew(1deg); }
        }
        
        .mission-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 35px;
        }
        
        .control-btn {
            background: linear-gradient(45deg, rgba(100, 100, 100, 0.8), rgba(50, 50, 50, 0.8));
            color: #ffffff;
            border: none;
            padding: 15px 30px;
            border-radius: 10px;
            cursor: pointer;
            font-family: 'Orbitron', monospace;
            font-size: 0.9rem;
            font-weight: 600;
            transition: all 0.3s ease;
            text-transform: uppercase;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.4);
        }
        
        .control-btn:hover {
            background: linear-gradient(45deg, rgba(150, 150, 150, 0.8), rgba(100, 100, 100, 0.8));
            transform: translateY(-2px);
        }
        
        .control-btn:disabled {
            opacity: 0.4;
            cursor: not-allowed;
            transform: none;
        }
        
        .control-btn.primary {
            background: linear-gradient(45deg, rgba(0, 255, 65, 0.8), rgba(0, 153, 255, 0.8));
            color: #000000;
        }
        
        .control-btn.primary:hover {
            box-shadow: 0 8px 25px rgba(0, 255, 65, 0.4);
        }
        
        .mission-complete {
            text-align: center;
            padding: 80px 40px;
        }
        
        .complete-icon {
            font-size: 8rem;
            margin-bottom: 40px;
            animation: completePulse 3s ease-in-out infinite;
            filter: drop-shadow(0 0 40px currentColor);
        }
        
        @keyframes completePulse {
            0%, 100% { transform: scale(1) rotate(0deg); }
            50% { transform: scale(1.1) rotate(10deg); }
        }
        
        .complete-title {
            font-family: 'Orbitron', monospace;
            font-size: 3rem;
            font-weight: 900;
            margin-bottom: 30px;
            color: #00ff41;
            text-shadow: 0 0 40px rgba(0, 255, 65, 0.8);
        }
        
        .mission-score {
            font-size: 4rem;
            font-weight: 800;
            color: #0099ff;
            margin-bottom: 25px;
            text-shadow: 0 0 30px rgba(0, 153, 255, 0.8);
            font-family: 'Orbitron', monospace;
        }
        
        .score-rating {
            font-size: 2.5rem;
            color: #ff6b35;
            margin-bottom: 35px;
            text-shadow: 0 0 25px rgba(255, 107, 53, 0.8);
            font-weight: 700;
        }
        
        .commander-report {
            font-size: 1.2rem;
            margin-bottom: 50px;
            line-height: 1.7;
            color: #00ff41;
            opacity: 0.95;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }
        
        .new-mission-btn {
            background: linear-gradient(45deg, #ff6b35, #00ff41, #0099ff);
            background-size: 200% 100%;
            color: #000000;
            border: none;
            padding: 25px 50px;
            border-radius: 15px;
            font-family: 'Orbitron', monospace;
            font-size: 1.2rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.5s ease;
            box-shadow: 0 15px 40px rgba(255, 107, 53, 0.4);
            animation: missionGlow 4s ease-in-out infinite;
            text-transform: uppercase;
        }
        
        @keyframes missionGlow {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }
        
        .new-mission-btn:hover {
            transform: translateY(-8px) scale(1.05);
            box-shadow: 0 20px 50px rgba(255, 107, 53, 0.6);
        }
        
        @media (max-width: 768px) {
            .mission-title {
                font-size: 2.5rem;
            }
            
            .command-center {
                padding: 30px;
            }
            
            .mission-grid {
                grid-template-columns: 1fr;
            }
            
            .command-display {
                padding: 25px;
            }
            
            .command-text {
                font-size: 1.2rem;
            }
            
            .response-grid {
                grid-template-columns: 1fr;
            }
            
            .hud-displays {
                flex-direction: column;
                gap: 15px;
            }
        }
    </style>
</head>
<body>
    <div class="space-field" id="spaceField"></div>
    
    <div class="container">
        <div class="mission-control">
            <div class="control-header">
                <div class="mission-title">⚡ AZERON QUIZ GAME ⚡</div>
                <div class="mission-subtitle">THESE TERMS WILL help you not only as you study for your appraisal exam, but also after you pass your exam and are on the job every day.</div>
            </div>
            
            <div class="command-center">
                <!-- Mission Selection -->
                <div id="missionSelection">
                    <div class="mission-briefing">
                        <div class="briefing-text">Neural Link Established - Select Mission Protocol</div>
                        <div class="launch-status">◆ Quantum Systems Online - Awaiting Command</div>
                    </div>
                    
                    <div class="mission-grid">
                        <div class="mission-module" onclick="launchMission('solar')">
                            <div class="module-indicator">🪐</div>
                            <div class="module-icon">🌌</div>
                            <div class="module-name">MISSION 1</div>
                            <div class="difficulty-matrix">
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell"></div>
                                <div class="matrix-cell"></div>
                                <div class="matrix-cell"></div>
                            </div>
                        </div>
                        
                        <div class="mission-module" onclick="launchMission('rockets')">
                            <div class="module-indicator">🚀</div>
                            <div class="module-icon">🛰️</div>
                            <div class="module-name">MISSION 2</div>
                            <div class="difficulty-matrix">
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell"></div>
                                <div class="matrix-cell"></div>
                            </div>
                        </div>
                        
                        <div class="mission-module" onclick="launchMission('astronauts')">
                            <div class="module-indicator">👨‍🚀</div>
                            <div class="module-icon">🧑‍🚀</div>
                            <div class="module-name">MISSION 3</div>
                            <div class="difficulty-matrix">
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell active"></div>
                                <div class="matrix-cell"></div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Mission Session -->
                <div id="missionSession" class="mission-session">
                    <div class="session-hud">
                        <button class="abort-mission" onclick="abortMission()">⚠ ABORT MISSION</button>
                        <div class="hud-displays">
                            <div class="hud-screen" id="commandCounter">CMD: 1/6</div>
                            <div class="hud-screen" id="successCounter">SUCCESS: 0</div>
                        </div>
                    </div>
                    
                    <div class="mission-progress">
                        <div class="progress-beam" id="progressBeam"></div>
                    </div>
                    
                    <div class="command-display">
                        <div class="command-text" id="commandText"></div>
                        <div class="response-grid" id="responseGrid"></div>
                    </div>
                    
                    <div class="mission-controls">
                        <button class="control-btn" id="prevCommand" onclick="previousCommand()" disabled>← PREVIOUS</button>
                        <button class="control-btn primary" id="nextCommand" onclick="nextCommand()" style="display: none;">NEXT COMMAND →</button>
                    </div>
                </div>
                
                <!-- Mission Complete -->
                <div id="missionComplete" class="mission-session">
                    <div class="mission-complete">
                        <div class="complete-icon" id="completeIcon">🏆</div>
                        <div class="complete-title">MISSION COMPLETE</div>
                        <div class="mission-score" id="finalSuccess">0/6</div>
                        <div class="score-rating" id="successRate">0%</div>
                        <div class="commander-report" id="commanderReport"></div>
                        <button class="new-mission-btn" onclick="newMission()">Launch New Mission</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Create space field
        function createSpaceField() {
            const spaceField = document.getElementById('spaceField');
            
            // Create stars
            for (let i = 0; i < 150; i++) {
                const star = document.createElement('div');
                star.className = 'star-field';
                
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.animationDelay = Math.random() * 4 + 's';
                star.style.animationDuration = (3 + Math.random() * 3) + 's';
                
                spaceField.appendChild(star);
            }
            
            // Create satellites
            for (let i = 0; i < 3; i++) {
                const satellite = document.createElement('div');
                satellite.className = 'satellite';
                
                satellite.style.left = Math.random() * 100 + '%';
                satellite.style.top = Math.random() * 100 + '%';
                satellite.style.animationDelay = Math.random() * 20 + 's';
                satellite.style.animationDuration = (15 + Math.random() * 10) + 's';
                
                spaceField.appendChild(satellite);
            }
            
            // Create radar sweeps
            for (let i = 0; i < 4; i++) {
                const radar = document.createElement('div');
                radar.className = 'radar-sweep';
                
                radar.style.left = Math.random() * 100 + '%';
                radar.style.top = Math.random() * 100 + '%';
                radar.style.animationDelay = Math.random() * 8 + 's';
                
                spaceField.appendChild(radar);
            }
        }
        
        createSpaceField();

        const missionData = {
            solar: [
                {
                  question: "residual techniques - processes used in the income approach in which the unknown income from one component is derived by subtracting the known income from another component from the net operating income. The derived (residual) income is then capitalized to find the value of the corresponding component. Can be used for land-building or mortgage-equity components.",
                  options: ["Residual techniques", "Restriction", "Reverse annuity mortgage", "Review appraiser"],
                  correct: 0
                },
                {
                  question: "restriction (restrict covenant) - a limitation on the way a property can be used.",
                  options: ["Restriction", "Residual techniques", "Reversion", "Review appraiser"],
                  correct: 0
                },
                {
                  question: "reverse annuity mortgage - when a homeowner receives monthly checks or a lump sum with no repayment until property is sold; usually an agreement between mortgagor and elderly homeowners.",
                  options: ["Reverse annuity mortgage", "Restriction", "Residual techniques", "Review appraiser"],
                  correct: 0
                },
                {
                  question: "Reversion - a lessor's right to possess leased property at the termination of a lease. Also refers generally to sale of a property at the end of a holding period.",
                  options: ["Reversion", "Residual techniques", "Restriction", "Reverse annuity mortgage"],
                  correct: 0
                },
                {
                  question: "review appraiser - an appraiser who inspects the reports of other appraisers to determine the validity of the conclusions and data given in the report.",
                  options: ["Review appraiser", "Residual techniques", "Restriction", "Reverse annuity mortgage"],
                  correct: 0
                },
                {
                  question: "revision - a revised or new version, as in a contract.",
                  options: ["Revision", "Review appraiser", "Reversion", "Residual techniques"],
                  correct: 0
                },
                {
                  question: "rezoning - change or amendment to a zoning map.",
                  options: ["Rezoning", "Revision", "Review appraiser", "Restriction"],
                  correct: 0
                },
                {
                  question: "strip center - commercial use of real estate, such as a neighborhood shopping center, in which the buildings are adjoining and narrow in depth relative to the length.",
                  options: ["Strip center", "Subdivision", "Subject property", "Sublease"],
                  correct: 0
                },
                {
                  question: "Subdivision - large plot of land divided into small lots for sale or lease.",
                  options: ["Subdivision", "Strip center", "Subject property", "Sublease"],
                  correct: 0
                },
                {
                  question: "subject property - the property being appraised.",
                  options: ["Subject property", "Subdivision", "Strip center", "Sublease"],
                  correct: 0
                },
                {
                  question: "sublease - agreement in which the tenant (lessee) leases the property or part of the property to a third party, thus becoming a lessor.",
                  options: ["Sublease", "Sublet", "Transfer tax", "Trend"],
                  correct: 0
                },
                {
                  question: "sublet - the act of a lessee transferring part or all of his or her lease to a third party while maintaining responsibility for all duties and obligations of the lease contract.",
                  options: ["Sublet", "Sublease", "Transfer tax", "Trend"],
                  correct: 0
                },
                {
                  question: "transfer tax - a state or municipal tax payable when the conveyancing instrument is recorded.",
                  options: ["Transfer tax", "Trend", "Trust", "Trustee"],
                  correct: 0
                },
                {
                  question: "trend - series of related changes brought about by a chain of causes and effects.",
                  options: ["Trend", "Transfer tax", "Trust", "Trustee"],
                  correct: 0
                },
                {
                  question: "Trust - an arrangement in which title to property is transferred from a grantor to a trustee, who holds title but not the right of possession for a third party, the beneficiary.",
                  options: ["Trust", "Trustee", "Trend", "Transfer tax"],
                  correct: 0
                },
                {
                  question: "trustee - a person who holds title to property for another person designated as the beneficiary.",
                  options: ["Trustee", "Trust", "Trend", "Transfer tax"],
                  correct: 0
                },
                {
                  question: "Truth-in-Lending Law - also known as Regulation Z; requires lenders to make full disclosure regarding the terms of a loan.",
                  options: ["Truth-in-Lending Law", "Trust", "Trustee", "Trend"],
                  correct: 0
                },
                {
                  question: "unilateral contract - a one-sided contract in which one party is obligated to perform a particular act completely before the other party has any obligation to perform.",
                  options: ["Unilateral contract", "Unit-in-place method", "Units of comparison", "Unsecured loan"],
                  correct: 0
                },
                {
                  question: "unit-in-place method - also known as segregated cost method; a method of estimating building cost in which total building cost is estimated by summing prices for various building components as installed, based on specific units of use such as square footage or cubic footage.",
                  options: ["Unit-in-place method", "Units of comparison", "Unsecured loan", "Useful life"],
                  correct: 0
                },
                {
                  question: "units of comparison - physical or economic measure that can be divided into the property's price to provide a more standardized comparison of the properties. The measure should be one that accounts for differences in the price typically paid for the properties, such as price per square foot (office building), price per seat (theater), or price per gallon of gas pumped (gas station). Income can also be a unit of comparison, such as when price is divided by effective gross income to obtain an effective gross income multiplier.",
                  options: ["Units of comparison", "Unit-in-place method", "Unsecured loan", "Useful life"],
                  correct: 0
                },
                {
                  question: "unsecured loan - a loan that is not backed by collateral or security.",
                  options: ["Unsecured loan", "Units of comparison", "Useful life", "VA-guaranteed loan"],
                  correct: 0
                },
                {
                  question: "useful life - the period of time a property is expected to have economic utility.",
                  options: ["Useful life", "Unsecured loan", "VA-guaranteed loan", "Vacancy and collection loss"],
                  correct: 0
                },
                {
                  question: "vacancy and collection loss - the loss of income due to vacancy and nonpayment of rent.",
                  options: ["Vacancy and collection loss", "Useful life", "VA-guaranteed loan", "Valid contract"],
                  correct: 0
                }
            
            ],
            rockets: [
               {
  question: "wear and tear - physical deterioration of property due to weathering, aging, and use.",
  options: ["Wear and tear", "Will", "Suit for specific performance", "Super-adequacy"],
  correct: 0
},
{
  question: "will - a written document that directs the distribution of a deceased person's property, real and personal.",
  options: ["Will", "Wear and tear", "Suit for specific performance", "Super-adequacy"],
  correct: 0
},
{
  question: "suit for specific performance - a lawsuit filed for the purpose of compelling a party to perform particular acts rather than pay monetary damages to settle a dispute.",
  options: ["Suit for specific performance", "Will", "Super-adequacy", "Supplemental standards"],
  correct: 0
},
{
  question: "super-adequacy - features that are not fully valued by the marketplace (e.g., 24-carat gold faucets).",
  options: ["Super-adequacy", "Suit for specific performance", "Supplemental standards", "Supply and demand"],
  correct: 0
},
{
  question: "supplemental standards - additional requirements that add to the development and reporting requirements of USPAP.",
  options: ["Supplemental standards", "Super-adequacy", "Supply and demand", "Surplus productivity"],
  correct: 0
},
{
  question: "supply and demand - in appraisal, a principle that states that the value of a property depends on the quantity and price of the property type available in the market and on the number of market participants and the price they are willing to pay.",
  options: ["Supply and demand", "Supplemental standards", "Surplus productivity", "Survey"],
  correct: 0
},
{
  question: "surplus productivity - the net income that remains after the costs of labor, capital, and coordination have been deducted from total income.",
  options: ["Surplus productivity", "Supply and demand", "Survey", "Syndicate"],
  correct: 0
},
{
  question: "survey - a map that shows the exact legal boundaries of a property, the location of easements, encroachments, improvements, rights-of-way, and other physical features.",
  options: ["Survey", "Surplus productivity", "Syndicate", "Village"],
  correct: 0
},
{
  question: "syndicate - a group formed by a syndicator to combine funds for real estate investment.",
  options: ["Syndicate", "Survey", "Village", "Void contract"],
  correct: 0
},
{
  question: "village - an incorporated minor municipality usually larger than a hamlet and smaller than a town.",
  options: ["Village", "Syndicate", "Void contract", "Voidable contract"],
  correct: 0
},
{
  question: "void contract - a contract that is not legally enforceable; the absence of a valid contract.",
  options: ["Void contract", "Village", "Voidable contract", "Wraparound mortgage"],
  correct: 0
},
{
  question: "voidable contract - a contract that appears to be valid but is subject to cancellation by one or both of the parties.",
  options: ["Voidable contract", "Void contract", "Wraparound mortgage", "Write of execution"],
  correct: 0
},
{
  question: "wraparound mortgage - a mortgage that includes the remaining balance on an existing first mortgage, plus an additional amount. Full payments on both mortgages are made to the wraparound mortgagee, who then forwards the payments on the first mortgage to the first mortgagee.",
  options: ["Wraparound mortgage", "Voidable contract", "Write of execution", "Yield"],
  correct: 0
},
{
  question: "Write of execution - a court order to the sheriff or other officer to sell the property of a debtor to satisfy a previously rendered judgment.",
  options: ["Write of execution", "Wraparound mortgage", "Yield", "Yield capitalization"],
  correct: 0
},
{
  question: "Yield - rate of return on an investment. Could be an overall yield for the property (yo), a yield for the equity investor (ye), or a yield for the lender (ym) mortgage component.",
  options: ["Yield", "Write of execution", "Yield capitalization", "Zone"],
  correct: 0
},
{
  question: "yield capitalization - method used in the income approach to determine property value by discounting future cash flows at an appropriate discount rate (yield rate) that reflects the rate of return required by investors. The approach may or may not explicitly consider financing. See discounted cash flow analysis.",
  options: ["Yield capitalization", "Yield", "Zone", "Zoning ordinance"],
  correct: 0
},
{
  question: "Zone - an area reserved by authorities for specific use that is subject to certain restrictions.",
  options: ["Zone", "Yield capitalization", "Zoning ordinance", "Zoning restrictions"],
  correct: 0
},
{
  question: "zoning ordinance - the exercise of regulating and controlling the use of a property in a municipality.",
  options: ["Zoning ordinance", "Zone", "Zoning restrictions", "USPAP"],
  correct: 0
},
{
  question: "zoning restrictions - restrictions may be placed on issues such as height, density, use, or development of properties.",
  options: ["Zoning restrictions", "Zoning ordinance", "Zone", "USPAP"],
  correct: 0
},
{
  question: "Uniform Standards of Professional Appraisal Practice (USPAP) - a manual of professional standards of practice for appraisers; contains ethical principals and codes of conduct for appraisers.",
  options: ["Uniform Standards of Professional Appraisal Practice (USPAP)", "Zoning restrictions", "Zoning ordinance", "Zone"],
  correct: 0
},
{
                  question: "VA-guaranteed loan - a mortgage loan made to a qualified veteran that is guaranteed by the Department of Veterans Affairs.",
                  options: ["VA-guaranteed loan", "Vacancy and collection loss", "Valid contract", "Valuation"],
                  correct: 0
                },
                {
                  question: "valid contract - an agreement that is legally enforceable and binding on all parties.",
                  options: ["Valid contract", "VA-guaranteed loan", "Vacancy and collection loss", "Valuation"],
                  correct: 0
                }
            ],
            astronauts: [
                {
                  question: "valuation - process of estimating a defined value of an identified interest in a specific parcel of real estate as of a given date.",
                  options: ["Valuation", "Valid contract", "VA-guaranteed loan", "Vacancy and collection loss"],
                  correct: 0
                },          
                {
                      question: "What does SLS stand for in NASA's rocket program?",
                      options: ["Space Launch System", "Super Large Spacecraft", "Stellar Launch Station", "Space Landing System"],
                      correct: 0
                },
                {
                  question: "right of egress (or ingress) - the right to enter or leave designated premises.",
                  options: ["Right of egress (or ingress)", "Right of first refusal", "Right of redemption", "Right of survivorship"],
                  correct: 0
                },
                {
                  question: "right of first refusal - the right of a person to have the first opportunity to purchase property before it is offered to anyone else.",
                  options: ["Right of first refusal", "Right of redemption", "Right of egress (or ingress)", "Riparian rights"],
                  correct: 0
                },
                {
                  question: "right of redemption - the statutory right to reclaim ownership of property after a foreclosure sale.",
                  options: ["Right of redemption", "Right of survivorship", "Right of first refusal", "Riparian rights"],
                  correct: 0
                },
                {
                  question: "right of survivorship - in joint tenancy, the right of survivors to acquire the interest of a deceased joint tenant.",
                  options: ["Right of survivorship", "Right of redemption", "Right of first refusal", "Riparian rights"],
                  correct: 0
                },
                {
                  question: "riparian rights - the rights of a landowner whose property is adjacent to a flowing waterway, such as a river,to access and use the water.",
                  options: ["Riparian rights", "Right of redemption", "Right of first refusal", "Right of survivorship"],
                  correct: 0
                },
                {
                  question: "Risk - principle that deals with the uncertainty of outcomes",
                  options: ["Risk", "Subordinate", "Subrogation", "Substitution"],
                  correct: 0
                },
                {
                  question: "subordinate - to accept, voluntarily, a lower priority lien position than that to which one would normally be entitled.",
                  options: ["Subordinate", "Subrogation", "Substitution", "Suit for possession"],
                  correct: 0
                },
                {
                  question: "Subrogation - the substitution of one party into another's legal role as the creditor for a particular debt.",
                  options: ["Subrogation", "Subordinate", "Substitution", "Suit for possession"],
                  correct: 0
                },
                {
                  question: "substitution - the principle in appraising that a buyer will be willing to pay no more for the property being appraised than the cost of purchasing an equally desirable property.",
                  options: ["Substitution", "Subordinate", "Subrogation", "Suit for possession"],
                  correct: 0
                },
                {
                  question: "suit for possession - a lawsuit filed by a landlord to evict a tenant who has violated the terms of the lease or retained possession of the property after the lease has expired.",
                  options: ["Suit for possession", "Substitution", "Subrogation", "Usury"],
                  correct: 0
                },
                {
                  question: "usury - the practice of charging interest at a rate higher than that allowed by law.",
                  options: ["Usury", "Utility", "Value in exchange", "Value in use"],
                  correct: 0
                },
                {
                  question: "utility - also known as functional utility; measure of usefulness of a property.",
                  options: ["Utility", "Usury", "Value in exchange", "Value in use"],
                  correct: 0
                },
                {
                  question: "value in exchange - value of a property in a typical market; market value.",
                  options: ["Value in exchange", "Utility", "Value in use", "Variable expense"],
                  correct: 0
                },
                {
                  question: "value in use - value of a property based on a specific use. This may differ from market value when the use is specialized and there is a limited market for the property based on that use.",
                  options: ["Value in use", "Value in exchange", "Utility", "Variable expense"],
                  correct: 0
                },
                {
                  question: "variable expense - expenses that vary depending on the level of occupancy (e.g., utilities, garbage removal).",
                  options: ["Variable expense", "Value in exchange", "Value in use", "Variance"],
                  correct: 0
                },
                {
                  question: "variance - permission obtained from zoning authorities to build a structure that is not in complete compliance with current zoning laws. A variance does not permit a non-conforming use of a property.",
                  options: ["Variance", "Variable expense", "Vendee", "Waiver"],
                  correct: 0
                },
                {
                  question: "Vendee - a buyer.vendor a seller; the property owner.",
                  options: ["Vendee", "Variance", "Waiver", "Warranty deed"],
                  correct: 0
                },
                {
                  question: "Waiver - the surrender of a known right or claim.",
                  options: ["Waiver", "Vendee", "Warranty deed", "Waste"],
                  correct: 0
                },
                {
                  question: "warranty deed - a deed in which the grantor fully warrants a good, clear title to the property.",
                  options: ["Warranty deed", "Waiver", "Vendee", "Waste"],
                  correct: 0
                },
                {
                  question: "waste - the improper use of a property by a party with the right to possession, such as the holder of a life estate.",
                  options: ["Waste", "Warranty deed", "Waiver", "Vendee"],
                  correct: 0
                }
            ]
        };

        let currentMission = '';
        let currentCommand = 0;
        let successCount = 0;
        let answered = false;
        let userAnswers = [];
        let shuffledQuestions = [];

        // Shuffle function
        function shuffleArray(array) {
            const shuffled = [...array];
            for (let i = shuffled.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
            }
            return shuffled;
        }

        function launchMission(missionType) {
            currentMission = missionType;
            currentCommand = 0;
            successCount = 0;
            answered = false;
            userAnswers = [];
            
            // Shuffle questions and their choices
            const originalQuestions = missionData[missionType];
            shuffledQuestions = originalQuestions.map(q => {
                const correctAnswer = q.options[q.correct];
                const shuffledOptions = shuffleArray(q.options);
                const newCorrectIndex = shuffledOptions.indexOf(correctAnswer);
                
                return {
                    question: q.question,
                    options: shuffledOptions,
                    correct: newCorrectIndex
                };
            });
            
            // Shuffle the order of questions too
            shuffledQuestions = shuffleArray(shuffledQuestions);
            
            document.getElementById('missionSelection').style.display = 'none';
            document.getElementById('missionSession').classList.add('active');
            
            showCommand();
        }

        function showCommand() {
            const command = shuffledQuestions[currentCommand];
            
            document.getElementById('commandText').textContent = command.question;
            
            const responseGrid = document.getElementById('responseGrid');
            responseGrid.innerHTML = '';
            
            command.options.forEach((option, index) => {
                const responseElement = document.createElement('button');
                responseElement.className = 'response-panel';
                responseElement.textContent = option;
                
                const previousAnswer = userAnswers[currentCommand];
                if (previousAnswer !== undefined) {
                    if (index === command.correct) {
                        responseElement.classList.add('correct');
                    } else if (index === previousAnswer && index !== command.correct) {
                        responseElement.classList.add('incorrect');
                    }
                    responseElement.style.pointerEvents = 'none';
                } else {
                    responseElement.onclick = () => executeCommand(index);
                }
                
                responseGrid.appendChild(responseElement);
            });
            
            updateHUD();
        }

        function executeCommand(selectedIndex) {
            if (answered) return;
            
            answered = true;
            const command = shuffledQuestions[currentCommand];
            const options = document.querySelectorAll('.response-panel');
            
            userAnswers[currentCommand] = selectedIndex;
            
            options.forEach((option, index) => {
                if (index === command.correct) {
                    option.classList.add('correct');
                } else if (index === selectedIndex && index !== command.correct) {
                    option.classList.add('incorrect');
                }
                option.style.pointerEvents = 'none';
            });
            
            if (selectedIndex === command.correct) {
                successCount++;
            }
            
            document.getElementById('nextCommand').style.display = 'block';
            updateHUD();
        }

        function updateHUD() {
            document.getElementById('commandCounter').textContent = `CMD: ${currentCommand + 1}/${shuffledQuestions.length}`;
            document.getElementById('successCounter').textContent = `SUCCESS: ${successCount}`;
            
            const progress = ((currentCommand + 1) / shuffledQuestions.length) * 100;
            document.getElementById('progressBeam').style.width = progress + '%';
            
            const prevBtn = document.getElementById('prevCommand');
            prevBtn.disabled = currentCommand === 0;
            
            const wasAnswered = userAnswers[currentCommand] !== undefined;
            if (wasAnswered) {
                document.getElementById('nextCommand').style.display = 'block';
                answered = true;
            } else {
                document.getElementById('nextCommand').style.display = 'none';
                answered = false;
            }
        }

        function previousCommand() {
            if (currentCommand > 0) {
                currentCommand--;
                answered = false;
                showCommand();
            }
        }

        function nextCommand() {
            currentCommand++;
            
            if (currentCommand < shuffledQuestions.length) {
                answered = false;
                showCommand();
            } else {
                completeMission();
            }
        }

        function completeMission() {
            document.getElementById('missionSession').classList.remove('active');
            document.getElementById('missionComplete').classList.add('active');
            
            const totalCommands = shuffledQuestions.length;
            const percentage = Math.round((successCount / totalCommands) * 100);
            
            document.getElementById('finalSuccess').textContent = `${successCount}/${totalCommands}`;
            document.getElementById('successRate').textContent = `${percentage}%`;
            
            let report = '';
            let icon = '';
            
            if (percentage >= 80) {
                report = 'Outstanding performance, Commander! Your exceptional knowledge of space exploration has earned you the rank of Space Admiral. You are ready to lead humanity\'s next great adventure among the stars. Mission Control is impressed with your stellar results!';
                icon = '🏆';
            } else if (percentage >= 60) {
                report = 'Excellent work, Commander! Your solid understanding of space science qualifies you for advanced missions. You have demonstrated the skills needed for deep space exploration. Continue your training to reach Admiral status!';
                icon = '🚀';
            } else if (percentage >= 40) {
                report = 'Good effort, Cadet! Your basic space knowledge shows promise for future missions. With additional study and training, you will be ready for more challenging space operations. Keep reaching for the stars!';
                icon = '🛰️';
            } else {
                report = 'Mission incomplete, Recruit. Your space knowledge needs significant improvement before you can be cleared for orbital missions. Report to the training facility for additional preparation. Every astronaut started somewhere!';
                icon = '📡';
            }
            
            document.getElementById('commanderReport').textContent = report;
            document.getElementById('completeIcon').textContent = icon;
        }

        function abortMission() {
            document.getElementById('missionSession').classList.remove('active');
            document.getElementById('missionSelection').style.display = 'block';
        }

        function newMission() {
            document.getElementById('missionComplete').classList.remove('active');
            document.getElementById('missionSelection').style.display = 'block';
        }
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'986a0207b05afc92',t:'MTc1OTEzMzQ2Ny4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
