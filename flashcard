<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>True or False Quiz</title>
    <style>
        body {
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .quiz-container {
            background: white;
            border-radius: 25px;
            box-shadow: 0 25px 50px rgba(0,0,0,0.15);
            padding: 40px;
            max-width: 700px;
            width: 100%;
            text-align: center;
        }

        .quiz-header {
            margin-bottom: 30px;
        }

        .quiz-title {
            font-size: 2.8rem;
            font-weight: bold;
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
        }

        .quiz-subtitle {
            font-size: 1.2rem;
            color: #666;
            margin-bottom: 20px;
        }

        .progress-container {
            background: #f0f0f0;
            border-radius: 15px;
            height: 12px;
            margin: 20px 0;
            overflow: hidden;
            position: relative;
        }

        .progress-fill {
            background: linear-gradient(90deg, #4facfe, #00f2fe);
            height: 100%;
            border-radius: 15px;
            transition: width 0.4s ease;
            position: relative;
        }

        .progress-text {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 0.9rem;
            font-weight: bold;
            color: #333;
        }

        .card-container {
            perspective: 1200px;
            margin: 40px 0;
            height: 320px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .flashcard {
            width: 100%;
            height: 280px;
            position: relative;
            transform-style: preserve-3d;
            transition: transform 0.7s;
            cursor: pointer;
        }

        .flashcard.flipped {
            transform: rotateY(180deg);
        }

        .card-face {
            position: absolute;
            width: 100%;
            height: 100%;
            backface-visibility: hidden;
            border-radius: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 40px;
            box-sizing: border-box;
            font-size: 1.6rem;
            font-weight: 600;
            text-align: center;
            box-shadow: 0 15px 35px rgba(0,0,0,0.1);
            border: 3px solid transparent;
        }

        .card-front {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .card-back {
            background: linear-gradient(135deg, #f093fb, #f5576c);
            color: white;
            transform: rotateY(180deg);
            font-size: 3rem;
            font-weight: bold;
        }

        .controls {
            display: flex;
            gap: 20px;
            justify-content: center;
            margin: 40px 0;
            flex-wrap: wrap;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 30px;
            font-size: 1.1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            min-width: 140px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .btn-flip {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
        }

        .btn-true {
            background: linear-gradient(135deg, #56ab2f, #a8e6cf);
            color: white;
        }

        .btn-false {
            background: linear-gradient(135deg, #ff416c, #ff4b2b);
            color: white;
        }

        .btn-next {
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            color: white;
        }

        .btn:hover:not(:disabled) {
            transform: translateY(-3px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
        }

        .btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
            transform: none !important;
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 20px;
            margin: 30px 0;
            padding: 25px;
            background: linear-gradient(135deg, #f8f9fa, #e9ecef);
            border-radius: 20px;
        }

        .stat-item {
            text-align: center;
            padding: 15px;
            background: white;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .stat-number {
            font-size: 2.2rem;
            font-weight: bold;
            background: linear-gradient(135deg, #4facfe, #00f2fe);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .stat-label {
            font-size: 1rem;
            color: #666;
            margin-top: 8px;
            font-weight: 600;
        }

        .quiz-complete {
            display: none;
            text-align: center;
        }

        .completion-message {
            font-size: 1.8rem;
            color: #333;
            margin: 30px 0;
        }

        .wrong-answers {
            margin-top: 40px;
            padding: 25px;
            background: linear-gradient(135deg, #fff5f5, #ffe6e6);
            border-radius: 20px;
            border-left: 6px solid #ff4b2b;
        }

        .wrong-title {
            color: #ff4b2b;
            margin-bottom: 25px;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .wrong-item {
            background: white;
            padding: 20px;
            margin: 15px 0;
            border-radius: 15px;
            border-left: 4px solid #ff4b2b;
            text-align: left;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }

        .wrong-statement {
            font-weight: bold;
            color: #333;
            margin-bottom: 10px;
            font-size: 1.1rem;
        }

        .your-answer {
            color: #ff4b2b;
            font-weight: 600;
            margin: 8px 0;
        }

        .correct-answer {
            color: #28a745;
            font-weight: 700;
            font-size: 1.1rem;
        }

        .feedback {
            margin: 20px 0;
            padding: 20px;
            border-radius: 15px;
            font-size: 1.3rem;
            font-weight: bold;
            text-align: center;
            transition: all 0.3s ease;
            display: none;
        }

        .feedback.correct {
            background: linear-gradient(135deg, #d4edda, #c3e6cb);
            color: #155724;
            border: 2px solid #28a745;
        }

        .feedback.incorrect {
            background: linear-gradient(135deg, #f8d7da, #f5c6cb);
            color: #721c24;
            border: 2px solid #dc3545;
        }

        .feedback.show {
            display: block;
            animation: fadeInScale 0.5s ease;
        }

        @keyframes fadeInScale {
            0% {
                opacity: 0;
                transform: scale(0.8);
            }
            100% {
                opacity: 1;
                transform: scale(1);
            }
        }

        @media (max-width: 768px) {
            .quiz-container {
                padding: 25px;
                margin: 15px;
            }

            .quiz-title {
                font-size: 2.2rem;
            }

            .card-face {
                font-size: 1.3rem;
                padding: 25px;
            }

            .controls {
                flex-direction: column;
                align-items: center;
                gap: 15px;
            }

            .stats {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }

            .btn {
                min-width: 200px;
            }
        }
    </style>
</head>
<body>
    <div class="quiz-container">
        <div class="quiz-header">
            <h1 class="quiz-title">üß† True or False Quiz</h1>
            <p class="quiz-subtitle">Test your knowledge with these statements!</p>
            <div class="progress-container">
                <div class="progress-fill" id="progressFill"></div>
                <div class="progress-text" id="progressText">0 / 15</div>
            </div>
        </div>

        <div class="quiz-content" id="quizContent">
            <div class="card-container">
                <div class="flashcard" id="flashcard" onclick="flipCard()">
                    <div class="card-face card-front" id="cardFront">
                        Click to start your quiz!
                    </div>
                    <div class="card-face card-back" id="cardBack">
                        Ready?
                    </div>
                </div>
            </div>

            <div class="controls">
                <button class="btn btn-flip" onclick="flipCard()" id="flipBtn">üîÑ Flip Card</button>
                <button class="btn btn-true" onclick="answerTrue()" id="trueBtn" disabled>‚úì TAMA</button>
                <button class="btn btn-false" onclick="answerFalse()" id="falseBtn" disabled>‚úó MALI</button>
                <button class="btn btn-next" onclick="nextCard()" id="nextBtn" disabled>‚û°Ô∏è Next</button>
            </div>

            <div class="feedback" id="feedback"></div>

            <div class="stats">
                <div class="stat-item">
                    <div class="stat-number" id="currentCard">0</div>
                    <div class="stat-label">Current</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="totalCards">15</div>
                    <div class="stat-label">Total</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="correctCount">0</div>
                    <div class="stat-label">Correct</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="incorrectCount">0</div>
                    <div class="stat-label">Wrong</div>
                </div>
            </div>

            <div class="wrong-answers" id="wrongAnswers" style="display: none;">
                <h3 class="wrong-title">üìù Review Your Mistakes</h3>
                <div class="wrong-list" id="wrongList"></div>
            </div>
        </div>

        <div class="quiz-complete" id="quizComplete">
            <h2>üéâ Quiz Complete!</h2>
            <div class="completion-message">
                Excellent work! You've finished all the questions.
            </div>
            <div class="stats">
                <div class="stat-item">
                    <div class="stat-number" id="finalCorrect">0</div>
                    <div class="stat-label">Correct</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="finalIncorrect">0</div>
                    <div class="stat-label">Wrong</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="accuracy">0%</div>
                    <div class="stat-label">Accuracy</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="grade">A+</div>
                    <div class="stat-label">Grade</div>
                </div>
            </div>
            <button class="btn btn-next" onclick="restartQuiz()">üîÑ Start Over</button>
        </div>
    </div>

    <script>
        const flashcards = [
{ 
                statement: "RA 386", 
                back: "CIVIL CODE OF THE PHILIPPINES", 
                answer: true,
                explanation: "DEFINING CIVIL LAWS AND JURISPRUDENCE",
            },
            { 
                statement: "RA 9646", 
                back: "REAL ESTATE SERVICE ACT [RESA]", 
                answer: true,
                explanation: "PROFESSIONALIZING REAL ESTATE SERVICE",
            },
            { 
                statement: "PD 1529", 
                back: "PROPERTY REGISTRATION DECREE", 
                answer: true,
                explanation: "LAND MANAGEMENT ACT",
            }, 
            { 
                statement: "ACT 496", 
                back: "SUBDIVISION AND CONDOMINIUM BUYERS PROTECTIVE DECREE", 
                answer: false,
                explanation: "LAND REGISTRATION ACT - TORRENS SYSTEM, COURT OF LAND REGISTRATION",
            },
            {
                statement: "ACT 3344", 
                back: "PRIORITIES FOR LAND CONVERSION", 
                answer: false,
                explanation: "RECORDING OF INSTRUMENTS OR DEEDS RELATING TO UNREGISTERED LAND - FIXING FEES TO BE COLLECTED BY RD",
            },
            {
                statement: "RA 3844", 
                back: "AGRARIAN LAND REFORM CODE", 
                answer: true,
                explanation: "ABOLISHED THE SHARE TENANCY",
            }, 
            { 
                statement: "PD 892", 
                back: "DISCONTINUING SPANISH TITLES", 
                answer: true,
                explanation: "SPANISH TITLES DECLARED UNREGISTERED LAND",
            }, 
            { 
                statement: "ACT 926", 
                back: "1ST PUBLIC LAND ACT", 
                answer: true,
                explanation: "HOMESTEAD, 16 HECTARES",
            }, 
            { 
                statement: "CA 141", 
                back: "2ND PUBLIC LAND ACT", 
                answer: true,
                explanation: "JUDICIAL CONFIRMATION OF TITLES",
            }, 
            { 
                statement: "ACT 2259", 
                back: "STANDARDS FOR ECONOMIC AND SOCIALIZED HOUSING", 
                answer: false,
                explanation: "CADASTRAL ACT - SYSTEMATIC SURVEY AND REGISTRATION OF LAND",
            }, 
            { 
                statement: "PD 27", 
                back: "PROPERTY REGISTRATION DECREE", 
                answer: false,
                explanation: "EMANCIPATION OF TENANTS - RICE AND CORN AGRICULTURAL",
            }, 
            {
                statement: "PD 1517", 
                back: "URBAN LAND REFORM ACT", 
                answer: true,
                explanation: "GOV‚ÄôT ACQUISITION OF URBAN LAND",
            },
            {
                statement: "RA 7279", 
                back: "UDHA OF 1992, LINA LAW", 
                answer: true,
                explanation: "LAW ON SQUATTERS",
            }, 
            { 
                statement: "RA 6657", 
                back: "COMPREHENSIVE AGRARIAN REFORM LAW", 
                answer: true,
                explanation: "ALL AGRICULTURAL LAND COVERED",
            }, 
            { 
                statement: "RA 8532", 
                back: "1ST EXTENSION OF CARP", 
                answer: true,
                explanation: "EXTENDED CARP FOR 10 YEARS UNTIL 2009",
            },
            { 
                statement: "RA 9700", 
                back: "CARPER, 2ND EXTENSION CARP", 
                answer: true,
                explanation: "EXTENDED CARP FOR 5 YEARS UNTIL 2014",
            },
            { 
                statement: "BP 220", 
                back: "SUBDIVISION AND CONDOMINIUM BUYERS PROTECTIVE DECREE", 
                answer: true,
                explanation: "REGISTRATION, DESIGN, GUIDELINES",
            },
            { 
                statement: "PD 1216", 
                back: "OPEN SPACE ACT", 
                answer: true,
                explanation: "DEFINING OPEN SPACE IN A RESIDENTIAL SUBDIVISION",
            },
            { 
                statement: "RA 7042", 
                back: "FOREIGN INVESTMENT ACT", 
                answer: true,
                explanation: "FORMER FILIPINOS, 5,000SQM URBAN, 3HAS RURAL",
            },
            { 
                statement: "RA 8179", 
                back: "AMENDING RA 7042", 
                answer: true,
                explanation: "FORMER FILIPINOS WHO CAN OWN LAND FOR BUSINESS PURPOSES",
            },
            { 
                statement: "BP 185", 
                back: "IMPLEMENTING ART XIV, SEC 15 OF THE PHIL CONSTITUTION", 
                answer: true,
                explanation: "FORMER FILIPINOS WHO CAN OWN LAND FOR RESIDENTIAL PURPOSES",
            },
            { 
                statement: "RA 4726", 
                back: "THE CONDOMINIUM ACT", 
                answer: true,
                explanation: "CONDOMINIUM CONCEPTS",
            },
            { 
                statement: "RA 7899", 
                back: "THE CONDOMINIUM ACT AMENDMENT", 
                answer: true,
                explanation: "AMENDING OR REVOKING THE ENABLING OR MASTER DEED",
            },
            { 
                statement: "", 
                back: "", 
                answer: true,
                explanation: "",
            },
            { 
                statement:  "", 
                back: "", 
                answer: true,
                explanation: "",
            },
            { 
                statement:  "", 
                back: "", 
                answer: true,
                explanation: "",
            },
            { 
                statement: ", 
                back: "", 
                answer: true,
                explanation: "",
            },
            { 
                statement: "", 
                back: "", 
                answer: true,
                explanation: "",
            },
            { 
                statement:  "", 
                back: "", 
                answer: true,
                explanation: "",
            },
            { 
                statement: "", 
                back: "", 
                answer: true,
                explanation: "",
            },
            { 
                statement: "", 
                back: "", 
                answer: true,
                explanation: "",
            },
        ];

        let currentCardIndex = 0;
        let correctAnswers = 0;
        let incorrectAnswers = 0;
        let isFlipped = false;
        let hasAnswered = false;
        let wrongAnswers = [];
        let shuffledCards = [];

        function shuffleArray(array) {
            const shuffled = [...array];
            for (let i = shuffled.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
            }
            return shuffled;
        }

        function updateProgress() {
            const progress = (currentCardIndex / shuffledCards.length) * 100;
            document.getElementById('progressFill').style.width = progress + '%';
            document.getElementById('progressText').textContent = `${currentCardIndex} / ${shuffledCards.length}`;
        }

        function updateStats() {
            document.getElementById('currentCard').textContent = currentCardIndex + 1;
            document.getElementById('correctCount').textContent = correctAnswers;
            document.getElementById('incorrectCount').textContent = incorrectAnswers;
        }

        function loadCard() {
            if (currentCardIndex >= shuffledCards.length) {
                showCompletion();
                return;
            }

            const card = shuffledCards[currentCardIndex];
            document.getElementById('cardFront').textContent = card.statement;
            document.getElementById('cardBack').textContent = card.back;
            
            // Reset card state
            document.getElementById('flashcard').classList.remove('flipped');
            isFlipped = false;
            hasAnswered = false;
            
            // Reset button states
            document.getElementById('trueBtn').disabled = true;
            document.getElementById('falseBtn').disabled = true;
            document.getElementById('nextBtn').disabled = true;
            
            // Hide feedback
            hideFeedback();
            
            updateProgress();
            updateStats();
        }

        function flipCard() {
            const flashcard = document.getElementById('flashcard');
            flashcard.classList.toggle('flipped');
            isFlipped = !isFlipped;
            
            if (isFlipped) {
                document.getElementById('trueBtn').disabled = false;
                document.getElementById('falseBtn').disabled = false;
            }
        }

        function answerTrue() {
            if (!hasAnswered) {
                checkAnswer(true);
            }
        }

        function answerFalse() {
            if (!hasAnswered) {
                checkAnswer(false);
            }
        }

        function checkAnswer(userAnswer) {
            const currentCard = shuffledCards[currentCardIndex];
            const isCorrect = userAnswer === currentCard.answer;
            
            if (isCorrect) {
                correctAnswers++;
                showFeedback("correct", `Tama! üéâ<br><br><small>${currentCard.explanation}</small>`);
            } else {
                incorrectAnswers++;
                const correctAnswerText = currentCard.answer ? "TAMA" : "MALI";
                const userAnswerText = userAnswer ? "TAMA" : "MALI";
                showFeedback("incorrect", `Mali! Ang tamang sagot ay: ${correctAnswerText}<br><br><small>${currentCard.explanation}</small>`);
                
                wrongAnswers.push({
                    statement: currentCard.statement,
                    yourAnswer: userAnswerText,
                    correctAnswer: correctAnswerText,
                    explanation: currentCard.explanation
                });
                showWrongAnswers();
            }
            
            hasAnswered = true;
            document.getElementById('trueBtn').disabled = true;
            document.getElementById('falseBtn').disabled = true;
            document.getElementById('nextBtn').disabled = false;
            updateStats();
        }

        function showWrongAnswers() {
            const wrongAnswersDiv = document.getElementById('wrongAnswers');
            const wrongList = document.getElementById('wrongList');
            
            if (wrongAnswers.length > 0) {
                wrongAnswersDiv.style.display = 'block';
                wrongList.innerHTML = '';
                
                wrongAnswers.forEach(item => {
                    const wrongItem = document.createElement('div');
                    wrongItem.className = 'wrong-item';
                    wrongItem.innerHTML = `
                        <div class="wrong-statement">${item.statement}</div>
                        <div class="your-answer">Your Answer: ${item.yourAnswer}</div>
                        <div class="correct-answer">Correct Answer: ${item.correctAnswer}</div>
                        <div style="margin-top: 10px; font-style: italic; color: #666; font-size: 0.95rem;">${item.explanation}</div>
                    `;
                    wrongList.appendChild(wrongItem);
                });
            }
        }

        function showFeedback(type, message) {
            const feedback = document.getElementById('feedback');
            feedback.innerHTML = message;
            feedback.className = `feedback ${type} show`;
        }

        function hideFeedback() {
            const feedback = document.getElementById('feedback');
            feedback.classList.remove('show');
        }

        function nextCard() {
            hideFeedback();
            currentCardIndex++;
            loadCard();
        }

        function getGrade(accuracy) {
            if (accuracy >= 95) return 'A+';
            if (accuracy >= 90) return 'A';
            if (accuracy >= 85) return 'B+';
            if (accuracy >= 80) return 'B';
            if (accuracy >= 75) return 'C+';
            if (accuracy >= 70) return 'C';
            if (accuracy >= 65) return 'D+';
            if (accuracy >= 60) return 'D';
            return 'F';
        }

        function showCompletion() {
            document.getElementById('quizContent').style.display = 'none';
            document.getElementById('quizComplete').style.display = 'block';
            
            document.getElementById('finalCorrect').textContent = correctAnswers;
            document.getElementById('finalIncorrect').textContent = incorrectAnswers;
            
            const accuracy = Math.round((correctAnswers / (correctAnswers + incorrectAnswers)) * 100) || 0;
            document.getElementById('accuracy').textContent = accuracy + '%';
            document.getElementById('grade').textContent = getGrade(accuracy);
        }

        function restartQuiz() {
            currentCardIndex = 0;
            correctAnswers = 0;
            incorrectAnswers = 0;
            hasAnswered = false;
            wrongAnswers = [];
            shuffledCards = shuffleArray(flashcards);
            
            document.getElementById('quizContent').style.display = 'block';
            document.getElementById('quizComplete').style.display = 'none';
            document.getElementById('wrongAnswers').style.display = 'none';
            
            loadCard();
        }

        // Initialize the quiz
        shuffledCards = shuffleArray(flashcards);
        loadCard();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'988b551c6728fee5',t:'MTc1OTQ4MjkwMC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
