<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game Hub - Your Gaming Home</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700;900&family=Inter:wght@300;400;500;600;700&display=swap');
        .game-title { font-family: 'Orbitron', monospace; }
        .game-card { 
            transition: all 0.3s ease; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .game-card:hover { 
            transform: translateY(-8px); 
            box-shadow: 0 20px 40px rgba(0,0,0,0.2);
        }
        .add-game-card {
            background: linear-gradient(135deg, #11998e 0%, #38ef7d 100%);
            border: 2px dashed rgba(255,255,255,0.3);
        }
        .add-game-card:hover {
            border: 2px dashed rgba(255,255,255,0.6);
        }
        .category-header {
            background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
        }
        .floating-shapes {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: -1;
        }
        .shape {
            position: absolute;
            opacity: 0.1;
            animation: float 6s ease-in-out infinite;
        }
        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }
    </style>
</head>
<body class="bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 min-h-screen text-white relative">
    <!-- Floating Background Shapes -->
    <div class="floating-shapes">
        <div class="shape w-20 h-20 bg-blue-500 rounded-full top-10 left-10" style="animation-delay: 0s;"></div>
        <div class="shape w-16 h-16 bg-purple-500 rounded-lg top-32 right-20" style="animation-delay: 2s;"></div>
        <div class="shape w-12 h-12 bg-pink-500 rounded-full bottom-20 left-32" style="animation-delay: 4s;"></div>
        <div class="shape w-24 h-24 bg-indigo-500 rounded-lg bottom-32 right-16" style="animation-delay: 1s;"></div>
    </div>

    <div class="container mx-auto px-4 py-8 max-w-7xl relative z-10">
        <!-- Header -->
        <header class="text-center mb-12">
            <h1 class="game-title text-6xl font-black mb-4 bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">
                üéÆ GAME HUB
            </h1>
            <p class="text-xl text-gray-300 max-w-2xl mx-auto">
                Your ultimate gaming destination. Add your HTML games and start playing instantly!
            </p>
        </header>

        <!-- Quick Stats -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-12">
            <div class="bg-white/10 backdrop-blur-lg rounded-xl p-6 text-center">
                <div class="text-3xl font-bold text-cyan-400" id="totalGames">0</div>
                <div class="text-gray-300">Total Games</div>
            </div>
            <div class="bg-white/10 backdrop-blur-lg rounded-xl p-6 text-center">
                <div class="text-3xl font-bold text-purple-400" id="categoriesCount">3</div>
                <div class="text-gray-300">Categories</div>
            </div>
            <div class="bg-white/10 backdrop-blur-lg rounded-xl p-6 text-center">
                <div class="text-3xl font-bold text-pink-400">‚àû</div>
                <div class="text-gray-300">Fun Level</div>
            </div>
        </div>

        <!-- Action Games Section -->
        <section class="mb-12">
            <div class="category-header rounded-t-xl p-4 mb-6">
                <h2 class="text-2xl font-bold flex items-center">
                    ‚ö° Action Games
                    <span class="ml-3 bg-white/20 px-3 py-1 rounded-full text-sm" id="actionCount">0</span>
                </h2>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6" id="actionGames">
                <!-- Add Game Card -->
                <div class="add-game-card game-card rounded-xl p-6 text-center cursor-pointer" onclick="addGame('action')">
                    <div class="text-4xl mb-4">‚ûï</div>
                    <h3 class="text-xl font-bold mb-2">Add Action Game</h3>
                    <p class="text-sm opacity-80">Click to add your HTML game code</p>
                </div>
            </div>
        </section>

        <!-- Puzzle Games Section -->
        <section class="mb-12">
            <div class="category-header rounded-t-xl p-4 mb-6">
                <h2 class="text-2xl font-bold flex items-center">
                    üß© Puzzle Games
                    <span class="ml-3 bg-white/20 px-3 py-1 rounded-full text-sm" id="puzzleCount">0</span>
                </h2>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6" id="puzzleGames">
                <!-- Add Game Card -->
                <div class="add-game-card game-card rounded-xl p-6 text-center cursor-pointer" onclick="addGame('puzzle')">
                    <div class="text-4xl mb-4">‚ûï</div>
                    <h3 class="text-xl font-bold mb-2">Add Puzzle Game</h3>
                    <p class="text-sm opacity-80">Click to add your HTML game code</p>
                </div>
            </div>
        </section>

        <!-- Arcade Games Section -->
        <section class="mb-12">
            <div class="category-header rounded-t-xl p-4 mb-6">
                <h2 class="text-2xl font-bold flex items-center">
                    üïπÔ∏è Arcade Games
                    <span class="ml-3 bg-white/20 px-3 py-1 rounded-full text-sm" id="arcadeCount">0</span>
                </h2>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6" id="arcadeGames">
                <!-- Add Game Card -->
                <div class="add-game-card game-card rounded-xl p-6 text-center cursor-pointer" onclick="addGame('arcade')">
                    <div class="text-4xl mb-4">‚ûï</div>
                    <h3 class="text-xl font-bold mb-2">Add Arcade Game</h3>
                    <p class="text-sm opacity-80">Click to add your HTML game code</p>
                </div>
            </div>
        </section>
    </div>

    <!-- Game Modal -->
    <div id="gameModal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
        <div class="bg-white rounded-xl max-w-4xl w-full max-h-[90vh] overflow-hidden">
            <div class="bg-gradient-to-r from-purple-600 to-blue-600 p-4 flex justify-between items-center">
                <h3 class="text-xl font-bold text-white" id="modalTitle">Game</h3>
                <button onclick="closeGameModal()" class="text-white hover:text-gray-300 text-2xl">√ó</button>
            </div>
            <div class="p-0 h-[70vh]">
                <iframe id="gameFrame" class="w-full h-full border-0" src=""></iframe>
            </div>
        </div>
    </div>

    <!-- Add Game Modal -->
    <div id="addGameModal" class="fixed inset-0 bg-black/80 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
        <div class="bg-white rounded-xl max-w-2xl w-full">
            <div class="bg-gradient-to-r from-green-600 to-blue-600 p-4">
                <h3 class="text-xl font-bold text-white">Add New Game</h3>
            </div>
            <div class="p-6">
                <div class="mb-4">
                    <label class="block text-gray-700 font-medium mb-2">Game Name</label>
                    <input type="text" id="gameName" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Enter game name">
                </div>
                <div class="mb-4">
                    <label class="block text-gray-700 font-medium mb-2">Game Description</label>
                    <input type="text" id="gameDescription" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" placeholder="Brief description of your game">
                </div>
                <div class="mb-6">
                    <label class="block text-gray-700 font-medium mb-2">HTML Game Code</label>
                    <textarea id="gameCode" rows="8" class="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent font-mono text-sm" placeholder="Paste your complete HTML game code here..."></textarea>
                </div>
                <div class="flex gap-4">
                    <button onclick="saveGame()" class="flex-1 bg-gradient-to-r from-green-500 to-blue-500 text-white py-3 px-6 rounded-lg font-medium hover:from-green-600 hover:to-blue-600 transition-all">
                        Save Game
                    </button>
                    <button onclick="closeAddGameModal()" class="flex-1 bg-gray-500 text-white py-3 px-6 rounded-lg font-medium hover:bg-gray-600 transition-all">
                        Cancel
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        let games = {
            action: [],
            puzzle: [],
            arcade: []
        };
        let currentCategory = '';

        // Load games from localStorage
        function loadGames() {
            const savedGames = localStorage.getItem('gameHubGames');
            if (savedGames) {
                games = JSON.parse(savedGames);
                renderAllGames();
                updateStats();
            }
        }

        // Save games to localStorage
        function saveGames() {
            localStorage.setItem('gameHubGames', JSON.stringify(games));
        }

        // Add new game
        function addGame(category) {
            currentCategory = category;
            document.getElementById('addGameModal').classList.remove('hidden');
        }

        // Save game
        function saveGame() {
            const name = document.getElementById('gameName').value.trim();
            const description = document.getElementById('gameDescription').value.trim();
            const code = document.getElementById('gameCode').value.trim();

            if (!name || !code) {
                alert('Please fill in the game name and HTML code!');
                return;
            }

            const game = {
                id: Date.now(),
                name: name,
                description: description || 'No description provided',
                code: code,
                category: currentCategory
            };

            games[currentCategory].push(game);
            saveGames();
            renderGames(currentCategory);
            updateStats();
            closeAddGameModal();
        }

        // Close add game modal
        function closeAddGameModal() {
            document.getElementById('addGameModal').classList.add('hidden');
            document.getElementById('gameName').value = '';
            document.getElementById('gameDescription').value = '';
            document.getElementById('gameCode').value = '';
        }

        // Play game
        function playGame(gameId, category) {
            const game = games[category].find(g => g.id === gameId);
            if (game) {
                document.getElementById('modalTitle').textContent = game.name;
                const gameFrame = document.getElementById('gameFrame');
                
                // Create a blob URL for the HTML content
                const blob = new Blob([game.code], { type: 'text/html' });
                const url = URL.createObjectURL(blob);
                gameFrame.src = url;
                
                document.getElementById('gameModal').classList.remove('hidden');
            }
        }

        // Close game modal
        function closeGameModal() {
            document.getElementById('gameModal').classList.add('hidden');
            const gameFrame = document.getElementById('gameFrame');
            if (gameFrame.src) {
                URL.revokeObjectURL(gameFrame.src);
                gameFrame.src = '';
            }
        }

        // Delete game
        function deleteGame(gameId, category) {
            if (confirm('Are you sure you want to delete this game?')) {
                games[category] = games[category].filter(g => g.id !== gameId);
                saveGames();
                renderGames(category);
                updateStats();
            }
        }

        // Render games for a specific category
        function renderGames(category) {
            const container = document.getElementById(category + 'Games');
            const addButton = container.querySelector('.add-game-card');
            
            // Clear existing games but keep add button
            container.innerHTML = '';
            container.appendChild(addButton);

            games[category].forEach(game => {
                const gameCard = document.createElement('div');
                gameCard.className = 'game-card rounded-xl p-6 cursor-pointer relative group';
                gameCard.innerHTML = `
                    <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                        <button onclick="deleteGame(${game.id}, '${category}')" class="bg-red-500 hover:bg-red-600 text-white rounded-full w-8 h-8 flex items-center justify-center text-sm">
                            √ó
                        </button>
                    </div>
                    <div class="text-4xl mb-4">üéÆ</div>
                    <h3 class="text-xl font-bold mb-2">${game.name}</h3>
                    <p class="text-sm opacity-80 mb-4">${game.description}</p>
                    <button onclick="playGame(${game.id}, '${category}')" class="bg-white/20 hover:bg-white/30 px-4 py-2 rounded-lg font-medium transition-all">
                        Play Now
                    </button>
                `;
                container.appendChild(gameCard);
            });
        }

        // Render all games
        function renderAllGames() {
            Object.keys(games).forEach(category => {
                renderGames(category);
            });
        }

        // Update statistics
        function updateStats() {
            const totalGames = Object.values(games).reduce((sum, categoryGames) => sum + categoryGames.length, 0);
            document.getElementById('totalGames').textContent = totalGames;
            document.getElementById('actionCount').textContent = games.action.length;
            document.getElementById('puzzleCount').textContent = games.puzzle.length;
            document.getElementById('arcadeCount').textContent = games.arcade.length;
        }

        // Close modals when clicking outside
        document.getElementById('gameModal').addEventListener('click', function(e) {
            if (e.target === this) closeGameModal();
        });

        document.getElementById('addGameModal').addEventListener('click', function(e) {
            if (e.target === this) closeAddGameModal();
        });

        // Initialize the app
        loadGames();
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'97aa60ad8035bc3d',t:'MTc1NzEyNDA3OC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
